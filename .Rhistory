install.packages("xaringan")
install.packages("devtools")
install.packages("libssl-dev")
install.packages("git2r")
install.packages("openssl")
install.packages("openssl")
install.packages(git2r)
install.packages("git2r")
install.packages("devtools")
install.packages("Rcurl")
install.packages("RCurl")
install.packages("RCurl")
install.packages("devtools")
install_github("rparrish/RPamisc")
library(devtools)
install_github("rparrish/RPamisc")
install.packages("odbc")
install.packages("odbc")
install.packages("odbc")
unixodbc-devel
?edwSQL
library(RPamisc)
?edwSQL
results <- load("results.Rdata")
getwd()
results <- load("edwSQL/results.Rdata")
results
load("edwSQL/results.Rdata")
results
load("edwSQL/results.Rdata")
getwd()
rm(results)
load("edwSQL/results.Rdata")
getwd()
results
load("edwSQL/results.Rdata")
getwd()
results
library(TIGdata)
knitr::opts_chunk$set(echo = FALSE)
library(odbc)
library(DBI)
library(tidyverse)
```{r, echo = FALSE, message = FALSE}
library(odbc)
library(DBI)
library(tidyverse)
library(odbc)
library(DBI)
library(tidyverse)
?dbConnect
con <- DBI::dbConnect(odbc(),
"StgEpicClarityPHS")
con <- DBI::dbConnect(odbc::odbc(), "StgEpicClarityPHS", uid = Sys.getenv("DBUSERNAME"),
pwd = Sys.getenv("DBPASSWORD"))
hvc <- dbGetQuery(con, "SELECT TOP 10 * FROM StgEpicClarityPHS.dbo.HOSP_VISITS_CST")
dbDisconnect(con)
# load packages
con <- DBI::dbConnect(odbc(),
"StgEpicClarityPHS")
sql_file <-
"SELECT TOP 10 *
con <- DBI::dbConnect(odbc::odbc(), "StgEpicClarityPHS", uid = Sys.getenv("DBUSERNAME"),
pwd = Sys.getenv("DBPASSWORD"))
sql_file <-  "SELECT TOP 10 *
FROM StgEpicClarityPHS.dbo.HOSP_VISITS_CST"
hvc <- dbGetQuery(con, sql(sql_file))
hvc
?sq2l
?sql
hvc2 <- readLines("hvc.sql")
sql_file <- readLines("hvc.sql")
hvc <- dbGetQuery(con, sql(sql_file))
sql_file <- readLines("hvc.sql") %>%
paste(collapse = "\n")
hvc <- dbGetQuery(con, sql(sql_file))
sql_file <- readLines("hvc.sql") %>%
paste(collapse = "\n")
hvc <- dbGetQuery(con, sql(sql_file))
sql_file <-  "SELECT TOP 10 *
hvc <- dbGetQuery(con, sql(sql_file))
sql_file <-  "SELECT TOP 10 *
FROM StgEpicClarityPHS.dbo.HOSP_VISITS_CST"
hvc <- dbGetQuery(con, sql(sql_file))
hvc
library(readr)
sql_file <- read_file("HVC.sql")
sql_file <- read_file("hvc.sql")
hvc <- dbGetQuery(con, sql(sql_file))
sql_file
sql_file <- read_file("hvc.sql")
sql_file
sql_file <- read_file("hvc.sql")
hvc <- dbGetQuery(con, sql(sql_file))
hvc <- dbGetQuery(con, sql_file)
sql_file <- read_file("hvc.sql")
hvc <- dbGetQuery(con, sql_file)
sql_file <- read_file("hvc.sql")
hvc <- dbGetQuery(con, sql_file)
sql_file <-  "SELECT TOP 10 *
hvc <- dbGetQuery(con, sql_file)
sql_file <- read_file("hvc.sql")
hvc <- dbGetQuery(con, sql_file)
hvc
sql_file <- read_file("hvc.sql")
hvc <- dbGetQuery(con, sql_file)
hvc
sql_file <- read_file("hvc.sql")
hvc <- dbGetQuery(con, sql_file)
hvc
sql_command <- read_file("hvc.sql")
hvc <- dbGetQuery(con, sql_file)
hvc
sql_command <-  "SELECT TOP 10 *
hvc <- dbGetQuery(con, sql_command)
sql_command <-  "SELECT TOP 10 *
FROM StgEpicClarityPHS.dbo.HOSP_VISITS_CST"
hvc <- dbGetQuery(con, sql_command)
names(hvc_simple)
names(hvc)
# load from .sql file
hvc_sql <- read_file("hvc.sql")
con <- DBI::dbConnect(odbc::odbc(), "StgEpicClarityPHS", uid = Sys.getenv("DBUSERNAME"),
pwd = Sys.getenv("DBPASSWORD"))
har_map <- dbGetQuery(con, har_map_sql)
har_map_sql <- read_file("har_map.sql")
har_map <- dbGetQuery(con, har_map_sql)
names(har_map)
har_map_sql <- read_file("har_map.sql")
har_map <- dbGetQuery(con, har_map_sql)
har_map_sql <- read_file("har_map.sql")
har_map <- dbGetQuery(con, har_map_sql)
har_map_sql <- read_file("har_map.sql")
har_map <- dbGetQuery(con, har_map_sql)
har_map_sql <- read_file("har_map.sql")
names(har_map_sql)
har_map <- dbGetQuery(con, har_map_sql)
names(har_map)
View(hvc)
# load from .sql file
hvc_sql <- read_file("hvc.sql")
# load from .sql file
hvc_sql <- read_file("hvc.sql")
a1c_sql <- read_file("a1c.sql")
hvc <- dbGetQuery(con, hvc_sql)
a1c <- dbGetQuery(con, a1c_sql)
dim(a1c)
hvc <- dbGetQuery(con, hvc_sql)
head(a1c)
mydata <-
hvc %>%
inner_join(a1c) %>%
select(PAT_MRN_ID, ADMIT_DATE, COMMON_NAME, ORD_VALUE)
mydata
library(tictoc)
tic("loading hvc")
hvc_sql <- read_file("hvc.sql")
toc()
tic("loading hvc")
hvc_sql <- read_file("hvc.sql")
hvc <- dbGetQuery(con, hvc_sql)
toc()
tic("loading a1c")
a1c_sql <- read_file("a1c.sql")
hvc_simple <- dbGetQuery(con, sql_simple) %>% select(-PAT_NAME)
tic("loading a1c")
a1c_sql <- read_file("a1c.sql")
a1c <- dbGetQuery(con, a1c_sql)
toc()
mydata <-
hvc %>%
left_join(a1c) %>%
select(PAT_MRN_ID, ADMIT_DATE, COMMON_NAME, ORD_VALUE)
mydata
mydata <-
hvc %>%
left_join(a1c) %>%
select(PAT_MRN_ID, ADMIT_DATE, COMMON_NAME, ORD_VALUE) %>%
filter(!is.na(COMMON_NAME))
mydata <-
hvc %>%
left_join(a1c) %>%
select(PAT_MRN_ID, ADMIT_DATE, COMMON_NAME, ORD_VALUE) %>%
filter(!is.na(COMMON_NAME))
mydata
mydata <-
hvc %>%
left_join(a1c) %>%
select(PAT_MRN_ID, ADMIT_DATE, COMMON_NAME, ORD_VALUE) %>%
filter(!is.na(COMMON_NAME)) %>%
head(n = 5)
mydata
mydata <-
hvc %>%
left_join(a1c) %>%
select(PAT_MRN_ID, ADMIT_DATE, HOSP_SERV, A1C = ORD_VALUE) %>%
filter(!is.na(COMMON_NAME)) %>%
head(n = 5)
mydata <-
hvc %>%
left_join(a1c) %>%
#select(PAT_MRN_ID, ADMIT_DATE, HOSP_SERV, A1C = ORD_VALUE) %>%
filter(!is.na(COMMON_NAME)) %>%
head(n = 5)
mydata
library(odbc)
library(DBI)
library(tidyverse)
library(odbc)
library(readr)
library(tictoc)
con <- DBI::dbConnect(odbc::odbc(), "StgEpicClarityPHS", uid = Sys.getenv("DBUSERNAME"),
pwd = Sys.getenv("DBPASSWORD"))
# simple command
sql_simple <-  "
SELECT TOP 10 * FROM StgEpicClarityPHS.dbo.HOSP_VISITS_CST WHERE ADMITDATE IS NOT NULL"
# load from .sql file
tic("loading hvc")
hvc_sql <- read_file("hvc.sql")
hvc <- dbGetQuery(con, hvc_sql)
library(odbc)
library(DBI)
library(tidyverse)
library(odbc)
library(readr)
library(tictoc)
con <- DBI::dbConnect(odbc::odbc(), "StgEpicClarityPHS", uid = Sys.getenv("DBUSERNAME"),
pwd = Sys.getenv("DBPASSWORD"))
# simple command
sql_simple <-  "
SELECT TOP 10 * FROM StgEpicClarityPHS.dbo.HOSP_VISITS_CST WHERE ADMITDATE IS NOT NULL"
# load from .sql file
tic("loading hvc")
hvc_sql <- read_file("hvc.sql")
hvc <- dbGetQuery(con, hvc_sql)
toc()
tic("loading a1c")
a1c_sql <- read_file("a1c.sql")
a1c <- dbGetQuery(con, a1c_sql)
toc()
tic("loading simple")
hvc_simple <- dbGetQuery(con, sql_simple) %>% select(-PAT_NAME)
toc()
dbDisconnect(con)
con <- DBI::dbConnect(odbc::odbc(), "StgEpicClarityPHS", uid = Sys.getenv("DBUSERNAME"),
pwd = Sys.getenv("DBPASSWORD"))
# simple command
sql_simple <-  "
SELECT TOP 10 * FROM StgEpicClarityPHS.dbo.HOSP_VISITS_CST WHERE ADMITDATE IS NOT NULL"
# load from .sql file
tic("loading hvc")
hvc_sql <- read_file("hvc.sql")
hvc <- dbGetQuery(con, hvc_sql)
toc()
tic("loading a1c")
a1c_sql <- read_file("a1c.sql")
a1c <- dbGetQuery(con, a1c_sql)
toc()
tic("loading simple")
hvc_simple <- dbGetQuery(con, sql_simple) %>% select(-PAT_NAME)
toc()
dbDisconnect(con)
mydata <-
hvc %>%
left_join(a1c) %>%
#select(PAT_MRN_ID, ADMIT_DATE, A1C = ORD_VALUE) %>%
filter(!is.na(COMMON_NAME)) %>%
head(n = 5)
mydata
unlink('R_databases/R_databases_cache', recursive = TRUE)
con <- DBI::dbConnect(odbc::odbc(), "StgEpicClarityPHS", uid = Sys.getenv("DBUSERNAME"),
pwd = Sys.getenv("DBPASSWORD"))
c
dbDisconnect(con)
con <- DBI::dbConnect(odbc::odbc(), "StgEpicClarityPHS", uid = Sys.getenv("DBUSERNAME"),
pwd = Sys.getenv("DBPASSWORD"))
dbDisconnect(con)
con <- DBI::dbConnect(odbc::odbc(), "StgEpicClarityPHS", uid = Sys.getenv("DBUSERNAME"),
pwd = Sys.getenv("DBPASSWORD"))
# load from .sql file
#tic("loading hvc")
hvc <- tbl(con, "HOSP_VISITS_CST")
head(hvc)
hvc %>%
select(FLAG, HOSP_SERV) %>%
count(sort = TRUE)
hvc %>%
group_by(FLAG, HOSP_SERV) %>%
count(sort = TRUE)
hvc %>%
group_by(HOSP_SERV) %>%
filter(FLAG == "ED TO INPATIENT") %>%
count(sort = TRUE)
hvc %>%
group_by(HOSP_SERV) %>%
filter(FLAG == "ED TO INPATIENT") %>%
count(sort = TRUE) %>%
head(n = 5)
hvc %>%
group_by(HOSP_LOC_NAME, HOSP_SERV) %>%
filter(FLAG == "ED TO INPATIENT") %>%
count(sort = TRUE) %>%
head(n = 5)
names(hvc)
head(hvc, 5) %>% names()
head(hvc, 5) %>% collect() %>% names()
hvc %>%
group_by(HSP_LOC_NAME, HOSP_SERV) %>%
filter(FLAG == "ED TO INPATIENT") %>%
count(sort = TRUE) %>%
head(n = 5)
filter(grepl("SACRED", HSP_LOC_NAME) %>%
hvc %>%
group_by(HSP_LOC_NAME, HOSP_SERV) %>%
filter(FLAG == "ED TO INPATIENT") %>%
filter(grepl("SACRED", HSP_LOC_NAME)) %>%
count(sort = TRUE) %>%
head(n = 5)
hvc %>%
group_by(HSP_LOC_NAME, HOSP_SERV) %>%
filter(FLAG == "ED TO INPATIENT") %>%
filter(grepl("SACRED", HSP_LOC_NAME)) %>%
count(sort = TRUE) %>%
head(n = 5)
hvc %>%
group_by(HSP_LOC_NAME, HOSP_SERV) %>%
filter(FLAG == "ED TO INPATIENT") %>%
count(sort = TRUE) %>%
#head(n = 5)
dbDisconnect(con)
hvc %>%
group_by(HSP_LOC_NAME, HOSP_SERV) %>%
filter(FLAG == "ED TO INPATIENT") %>%
count(sort = TRUE) %>%
#head(n = 5) %>%
{.}
hvc %>%
group_by(HSP_LOC_NAME, HOSP_SERV) %>%
filter(FLAG == "ED TO INPATIENT") %>%
filter(HSP_LOC_NAME == "WSH SACRED HEART MEDICAL CENTER") %>%
count(sort = TRUE) %>%
#head(n = 5) %>%
{.}
hvc %>%
filter(FLAG == "ED TO INPATIENT") %>%
filter(HSP_LOC_NAME == "WSH SACRED HEART MEDICAL CENTER") %>%
group_by(HOSP_SERV) %>%
count(sort = TRUE) %>%
#head(n = 5) %>%
{.}
# top 5 ED to inpatient admissions by Hospital Service
hvc %>%
filter(FLAG == "ED TO INPATIENT") %>%
filter(HSP_LOC_NAME == "WSH SACRED HEART MEDICAL CENTER") %>%
group_by(HOSP_SERV) %>%
count(sort = TRUE) %>%
head(n = 5) %>%
{.}
